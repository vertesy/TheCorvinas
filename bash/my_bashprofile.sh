# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

# User specific environment and startup programs
PATH=$PATH:$HOME/bin
export PATH

# # # # # # # # # # # # # # # # # # #
# Path
# # # # # # # # # # # # # # # # # # #
export PATH=/home/hub_oudenaarden/avertesy/bin/:$PATH
export PATH=/hpc/hub_oudenaarden/Abel/bin:$PATH
export PATH=/hpc/hub_oudenaarden/bin/:$PATH
export PATH=/hpc/hub_oudenaarden/bin/software/bwa-0.6.2/:$PATH
export PATH=/hpc/hub_oudenaarden/Abel/bin/cast/cast_SNP/:$PATH
export PATH=/hpc/hub_oudenaarden/Abel/bin/x_reactivation/DevCell_analysis/:$PATH

### Software ------------------------
export PATH=/home/hub_oudenaarden/avertesy/bin/sratoolkit.2.5.5-centos_linux64/bin/:$PATH
export PATH=/home/hub_oudenaarden/avertesy/.local/bin/cutadapt:$PATH

# # # # # # # # # # # # # # # # # # #
# Aliases
# # # # # # # # # # # # # # # # # # #

alias do.sh=/hpc/hub_oudenaarden/Abel/bin/do.sh

 # some useful command line short-cuts -----------
alias rm='rm -i'
function cdd { cd "$1" ; ls -p ; }
alias ..='cd ..; ls -p'
alias ...='cd ../..; ls -p'
alias ....='cd ../../..; ls -p'
alias nrfiles='ls -1U *.* | wc -l'
alias cxx='chmod +x'

### Software ------------------------
alias fastq-dump='/home/hub_oudenaarden/avertesy/bin/sratoolkit.2.5.5-centos_linux64/bin/fastq-dump '

### UMC specific aliases ------------------------
alias godrive='cdd  ; cd /hpc/hub_oudenaarden/Abel/; ls'
alias gohome='cd   ; ls'
alias gobin='cd   ; cd bin ; ls'

alias space_on_group_drive='cd /hpc/hub_oudenaarden; du --max-depth=1 -h'
alias syncbin_from_Hubrecht='rsync  -avzP --exclude='*.sam' a.vertesy@192.87.37.52:GroupVanOudenaarden/Abel/bin /hpc/hub_oudenaarden/Abel/'
alias synchome_from_Hubrecht='rsync  -avzP --exclude='GroupVanOudenaarden'  a.vertesy@192.87.37.52:/home/a.vertesy/. /home/hub_oudenaarden/avertesy/homefolder_at_Hubrecht/'

### HPC queue operations ------------------------
alias xsub='qsub -q medium -cwd -M a.vertesy@hubrecht.eu -m a -N xsub'; 					# short qsub command with defaults
alias qqq='echo "       "$(qstat | grep -c "avertesy     r") jobs are RUNNING"   " $(qstat | grep -c "avertesy     qw") are WAITING'; 	# How many jobs are scheduled and running?
function xdel_range { qdel echo `seq -f "%.0f" "$1" "$2"`; }; 								# delete a range of running jobs by a range of IDs
alias peremove_here='rm -f STDIN.pe*'; 														# remove junk generated by qsub
alias poremove_here='rm -f STDIN.po*'; 														# remove junk generated by qsub

# # # # # # # # # # # # # # # # # # #
# Own Functions
# # # # # # # # # # # # # # # # # # #

function is { if [ ! -d "$1" ] && [ ! -f "$1" ]; then echo -e "!!! NON EXISTENT FILE/DIR: \n       $1"; else echo "file/dir exists"; fi ; }; 	# check if a file/folder exists
function targz { if [ ! -d "$1" ] && [ ! -f "$1" ]; then echo -e "!!! NON EXISTENT FILE/DIR: \n     $1"; else tar -zcvf $1.tar.gz $1 	; echo -e "$1.tar.gz"; fi ; }; 	# create a single archive from a folder, then qzip it ; # create a .tar.gz next to the folder / file with the same_name.tar.gz
function untargz { if [ ! -f "$1" ]; then echo -e "!!! NON EXISTENT ARCHIVE: \n     $1"; else tar -xvf $1 ; is $(echo $1 | awk -F'.' '{print $1}'); fi ; }; 	# unqzip, then unarchive a .tar.gz archive
function qgzip { echo -e "gzip $1" | qsub -q short -cwd -N GZip;  }; 									# zip in parallel via the HPC queue
function qgunzip { echo -e "gunzip $1" | qsub -q short -cwd -N Gunzip;  }; 								# unzip in parallel via the HPC queue
function qcp { echo -e "cp $1 $2" | qsub -q short -cwd -N qcp;  }; 										# copy in parallel via the HPC queue
function delemptyfiles { find $1 -type f -empty -exec rm {} \; ; }; 									# delete all empty files in the directory: it removes junk that qsub command makes
function lsdir { ls -d -1 $PWD/*$1 ; }; 																# give the full path of all files & folders in the current directory - useful for copying stuff
function nrlines { find . -name "*.$1" | xargs wc -l >> NrLines_in_"$1.tsv"; };
function compare { cmp --silent $1 $2 || echo "     Files are different"; echo""; is $1; is $2;  }; 	# check if 2 files are the same; reports only if not!
function download { pp=$(pwd); echo "rsync -avzP UMC:$pp/${1##*/} /Users/abelvertesy/Downloads" ; }; 	# downloads the specified file to your local computers Downloads folder
function uploadToHere { pp=$(pwd); echo "rsync -avzP $1 UMC:$pp/" ; }; 									# uploads the specified file (on your local) to the current dir on the server

# bash_genomics ----------------------------------------------------------------------------------------------------
function _samnrReads { grep -vc '^@' $1 ; };
function _samnrMappedUniqBWA_SingleEnd { grep -cP 'X0:i:1\tX1:i:0' $1 ; };
function _samnrUnmapped_SingleEnd { cut -f3  $1 | grep -c \* ; }; # in field 3 there is either a * or the name of the reference
function _mappabilitySam { echo -e "$1\t"$(echo "scale=6; $(grep -cP 'X0:i:1\tX1:i:0' $1) / $(grep -vc '^@' $1) *100" | bc) ; }  ;

alias nrgenesInFasta="grep -c ">" *.fa"
alias nrFinished='grep "Real time:" * | wc -l'
# alias Cut='grep "Real time:" * | wc -l'
alias nrCoreDump='grep "core dump" * | wc -l'
